#include <stdio.h>
#define N 5 

int stack[N];
int top = -1; 
void push() {
    int x;
    if (top == N - 1) {
        printf("\nStack Overflow! Cannot push any more elements.\n");
    } else {
        printf("\nEnter the value to push: ");
        scanf("%d", &x);
        top++;
        stack[top] = x;
        printf("Pushed %d onto the stack.\n", x);
    }
}
void pop() {
    if (top == -1) {
        printf("\nStack Underflow! The stack is empty.\n");
    } else {
        printf("\nPopped %d from the stack.\n", stack[top]);
        top--;
    }
}
void display() {
    if (top == -1) {
        printf("\nThe stack is empty.\n");
    } else {
        printf("\nStack contents (top to bottom):\n");
        for (int i = top; i >= 0; i--) {
            printf("%d\n", stack[i]);
        }
    }
}
void peek() {
    if (top == -1) {
        printf("\nThe stack is empty.\n");
    } else {
        printf("\nTop element: %d\n", stack[top]);
    }
}

int main() {
    int choice;

    do {
        printf("\n--- Stack Operations ---");
        printf("\n1. Push");
        printf("\n2. Pop");
        printf("\n3. Peek");
        printf("\n4. Display");
        printf("\n5. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                push();
                break;
            case 2:
                pop();
                break;
            case 3:
                peek();
                break;
            case 4:
                display();
                break;
            case 5:
                printf("\nExiting program. Goodbye!\n");
                break;
            default:
                printf("\nInvalid choice! Please try again.\n");
        }
    } while (choice != 5);

    return 0;
}
