#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *left, *right;
};

struct Node* newNode(int data) {
    struct Node* node = (struct Node*)malloc(sizeof(struct Node));
    node->data = data;
    node->left = node->right = NULL;
    return node;
}

struct Node* insert(struct Node* root, int data) {
    if (root == NULL) {
        return newNode(data);
    }
    if (data < root->data) {
        root->left = insert(root->left, data);
    } else {
        root->right = insert(root->right, data);
    }
    return root;
}

int minValue(struct Node* root) {
    while (root->left != NULL) {
        root = root->left;
    }
    return root->data;
}

int maxValue(struct Node* root) {
    while (root->right != NULL) {
        root = root->right;
    }
    return root->data;
}

int search(struct Node* root, int key) {
    if (root == NULL) {
        return 0;
    }
    if (root->data == key) {
        return 1;
    }
    if (key < root->data) {
        return search(root->left, key);
    }
    return search(root->right, key);
}

int main() {
    struct Node* root = NULL;
    int n, value, key, choice;

    printf("Enter number of elements to insert into the BST: ");
    scanf("%d", &n);

    printf("Enter the elements to insert into the BST: \n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &value);
        root = insert(root, value);
    }

    do {
        printf("\nOperations:\n");
        printf("1. Display Minimum Value\n");
        printf("2. Display Maximum Value\n");
        printf("3. Search Given Value\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Minimum Value: %d\n", minValue(root));
                break;
            case 2:
                printf("Maximum Value: %d\n", maxValue(root));
                break;
            case 3:
                printf("Enter value to search: ");
                scanf("%d", &key);
                if (search(root, key)) {
                    printf("%d is present in the tree.\n", key);
                } else {
                    printf("%d is NOT present in the tree.\n", key);
                }
                break;
            case 4:
                printf("Exiting program.\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 4);

    return 0;
}
