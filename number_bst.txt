#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node *left, *right;
};
struct Node* newNode(int data) {
    struct Node* node = (struct Node*)malloc(sizeof(struct Node));
    node->data = data;
    node->left = node->right = NULL;
    return node;
}
struct Node* insert(struct Node* root, int data) {
    if (root == NULL) {
        return newNode(data);
    }
    if (data < root->data) {
        root->left = insert(root->left, data);
    } else {
        root->right = insert(root->right, data);
    }

    return root;
}
int search(struct Node* root, int key) {
    if (root == NULL) {
        return 0;  
    }
    if (root->data == key) {
        return 1;  
    }
    if (key > root->data) {
        return search(root->right, key);
    }
    return search(root->left, key);
}

int main() {
    struct Node* root = NULL; 
    int n, key, i;
    printf("Enter number of elements to insert into the BST: ");
    scanf("%d", &n);
    printf("Enter the elements to insert into the BST: \n");
    for (i = 0; i < n; i++) {
        int value;
        scanf("%d", &value);
        root = insert(root, value);
    }
    printf("Enter the number to search in the BST: ");
    scanf("%d", &key);
    if (search(root, key)) {
        printf("The number %d is present in the BST.\n", key);
    } else {
        printf("The number %d is NOT present in the BST.\n", key);
    }

    return 0;
}
